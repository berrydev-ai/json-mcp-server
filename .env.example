# JSON MCP Server Environment Configuration
# Copy this file to .env and customize for your deployment

# =============================================================================
# BASIC DEVELOPMENT (Local stdio transport)
# =============================================================================
# Uncomment for local development with default stdio transport

# VERBOSE=true
# FILE_PATH=/absolute/path/to/your/data.json
# JQ_PATH=/usr/local/bin/jq

# =============================================================================
# HTTP TRANSPORT (Local HTTP server)
# =============================================================================
# Uncomment for local HTTP server development

# TRANSPORT=http
# VERBOSE=true
# HOST=localhost
# PORT=3000
# CORS_ORIGIN=*
# FILE_PATH=/absolute/path/to/your/data.json

# =============================================================================
# DOCKER BASIC (Simple HTTP container)
# =============================================================================
# Environment variables for basic Docker deployment

# TRANSPORT=http
# VERBOSE=true
# HOST=0.0.0.0
# PORT=3000
# CORS_ORIGIN=*

# =============================================================================
# DOCKER WITH AUTHENTICATION (Secure HTTP container)
# =============================================================================
# Environment variables for authenticated Docker deployment

# TRANSPORT=http
# VERBOSE=true
# HOST=0.0.0.0
# PORT=8080
# CORS_ORIGIN=https://yourapp.com,https://localhost:3000
# AUTH_TOKEN=your-secret-token-here
# FILE_PATH=/data/your-data.json
# LOG_FILE=/logs/server.log

# =============================================================================
# DOCKER WITH S3 SYNC (Remote data with local caching)
# =============================================================================
# Environment variables for S3-enabled Docker deployment

# TRANSPORT=http
# VERBOSE=true
# HOST=0.0.0.0
# PORT=3000
# CORS_ORIGIN=*
# S3_URI=s3://your-bucket/data.json
# FILE_PATH=/data/synced-data.json
# AWS_ACCESS_KEY_ID=your-aws-access-key-id
# AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
# AWS_REGION=us-east-1

# =============================================================================
# PRODUCTION DEPLOYMENT (Full-featured secure setup)
# =============================================================================
# Environment variables for production deployment with all features

# TRANSPORT=http
# VERBOSE=false
# HOST=0.0.0.0
# PORT=8080
# CORS_ORIGIN=https://yourapp.com
# AUTH_TOKEN=your-production-secret-token (generate using `openssl rand -base64 32`)
# FILE_PATH=/data/production-data.json
# LOG_FILE=/logs/production.log
# S3_URI=s3://your-production-bucket/data.json
# AWS_ACCESS_KEY_ID=your-production-aws-key
# AWS_SECRET_ACCESS_KEY=your-production-aws-secret
# AWS_REGION=us-east-1
# MCP_VERSION=1.2.0

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================
# Additional optional environment variables

# Custom jq binary path (if not auto-detected)
# JQ_PATH=/custom/path/to/jq

# Multiple CORS origins (comma-separated)
# CORS_ORIGIN=https://app1.com,https://app2.com,http://localhost:3000

# Custom MCP version identifier
# MCP_VERSION=custom-version

# =============================================================================
# DOCKER COMPOSE EXAMPLE
# =============================================================================
# Example configuration for docker-compose.yml:
#
# services:
#   json-mcp-server:
#     image: ghcr.io/berrydev-ai/json-mcp-server:latest
#     ports:
#       - "8080:8080"
#     volumes:
#       - ./data:/data
#       - ./logs:/logs
#     env_file:
#       - .env
#     environment:
#       - TRANSPORT=http
#       - VERBOSE=true
#       - HOST=0.0.0.0
#       - PORT=8080
#       - AUTH_TOKEN=${AUTH_TOKEN}
#       - FILE_PATH=/data/data.json
#       - LOG_FILE=/logs/server.log
